Y <- data2york(x,inverse=FALSE)
plot(Y[,1],Y[,2])
plot(Y[,1],Y[,3])
plot(y[,1],y[,3])
yi
fit$a
fit
1/fit$a[1]
yi
foo <- c(1,2)
subset(foo,select=1)
subset(foo,subset=1)
subset(foo,select=1)
?select
?subset
?subset
?I
foo <- c(1,2)
foo[,1]
subset
foo
subset(foo,subset=c(TRUE,FALSE))
initial
dat[,'Y']
Q
y
fit
yi
y
plot(y[,'X'],y[,'Y'])
Q
x
y
Q
initial
dat[,'sY']
dat
scatterplot(dat)
Q
scatterplot(dat)
dev.new()
scatterplot(dat)
Q
scatterplot(dat)
dev.new()
scatterplot(dat)
Q
x.ess.source('/home/pvermees/Dropbox/Programming/R/IsoplotRtest.R', visibly = FALSE, output = TRUE)
x
y
yi
fit$b
Q
.ess.source('/home/pvermees/Dropbox/Programming/R/IsoplotRtest.R', visibly = FALSE, output = TRUE)
Q
.ess.source('/home/pvermees/Dropbox/Programming/R/IsoplotRtest.R', visibly = FALSE, output = TRUE)
Q
.ess.source('/home/pvermees/Dropbox/Programming/R/IsoplotRtest.R', visibly = FALSE, output = TRUE)
dat
scatterplot(dat)
initial$y0
dat
Q
q()
n
i76
m76
plot(i76,m76)
Q
traceback()
x
i
ns
x
i
wetherill
xi
x
i
wetherill(x,i)
Q
x
i
Q
x$format
Q
UPb
x$format
X2calc
X
x$format
Q
?optimise
?optimise
?optimize
SS.stacey.kramers.UPb(x,i=1,tinit=1000)
SS.stacey.kramers.UPb(x,i=1,tinit=tinit)
Q
SS.stacey.kramers.UPb(x,i=1,tinit=tinit)
Q
traceback()
fit
Q
fit
Q
fit
Q
traceback()
out
ns
out
Q
X
Q
X2plot
X
X2calc
fit
Q
X2calc
X2calc$x
fit$x
Q
X2calc$x
fit$x
Q
X2calc$x
fit$x
fit$x
Q
X2calc$x
Q
x
wi
Q
wi
Q
labels
x$x
Q
out
Q
tab
?write2csv
?write.csv
?write.csv
tab
read.data('../inst/UPb4.csv',
method='U-Pb',format=4)
q()
n
traceback()
i6474
J1
J2
b
a
Q
traceback()
a
b
PbPb
tt
tt
ttt
tt
tt
tt
tt
b
b
b
b
b
tt
a
b
Q
a
b
Q
stacey.kramers(4500)
stacey.kramers(1000)
stacey.kramers(500)
DP
y
a
DP
a
Q
traceback()
tt
PbPb
PbPb
PbPb
exterr
sigdig
i
PbPb2t(PbPb,exterr=exterr,sigdig=sigdig,i=i)
traceback()
tt
Q
PbPb
i
Q
tt
tt
tt
tt
tt
Q
r64
r74
Q
traceback()
PbPb2t(PbPb,exterr=exterr,sigdig=sigdig,i=i)
PbPb
i74/i64
Q
BIC
k
BIC
k
k
BIC
k
traceback()
fit
zs
get.minage.L(fit,zs)
fit
Q
zs
zs[,2] <- zs[,2]*100
zs
H <- stats::optimHess(fit,get.minage.L,zs=zs)
?optimHess
Q
?optimeHess
?optimHess
q()
n
conc.75.68
onc.75.68
conc.75.68
d0.76
do.76
(do.76 & disc.75.68>cutoff.disc[1] & disc.75.68<cutoff.disc[2])
conc.75.68 | conc.75.68
conc.75.68 || conc.75.68
Q
conc
which(conc)
which(!conc)
q()
n
fit
traceback()
xlim
x
cix
ciy
y
e
fit
Q
?add
?new
q()
n
q()
n
q()
n
cc
getwd()
write.csv(cc$x,file='/home/pvermees/Desktop/Sylvester.csv',row.names=FALSE)
write.csv(cbind(cc$x.raw,cc$x),file='/home/pvermees/Desktop/Sylvester.csv',row.names=FALSE)
omit
calcit
Q
q()
n
fit
Q
tt
y
covmat
det(covmat)
Q
q()
n
q()
n
q()
n
?runApp
q()
n
traceback()
X
sX
random.effects
valid
fit
X
sX
fit
X
sX
random.effects
valid
Q
traceback()
fit
valid
fit
fit
fit$mean[2]^2 + max(1,fit$mswd)*sX^2
sigma
fit$mean[2]^2 + max(1,fit$mswd)*sX^2
sqrt(fit$mean[2]^2 + max(1,fit$mswd)*sX^2)
random.effects
fit$disp
Q
Q
Q
q()
n
library(MASS)
?mvrnorm
?mvpnorm
?mvrnorm
?determinant
library(mvtnorm)
?mvdnorm
dmvnorm
?dmvnorm
?pmvnorm
?qmvnorm
?qmvt
Q
P
plot(P)
X
E
D-P
D
D[,c(1,3)]-P
plot(D[,c(1,3)]-P)
Q
plot(D[,c(1,3)]-P)
Q
q()
n
traceback()
x
Q
?data.matrix
x
snames
is.numeric(x)
X
traceback()
traceback()
x
is.numeric(x)
x
snames
out
traceback()
x
Q
traceback()
traceback()
x
snames
x
Q
x
x
Q
x
x
x
Q
x
Q
examples$RbSr
traceback()
x
Q
x
Q
q()
n
q()
n
q()
n
tt
d
dd
tt <- 1; U48 <- 1; (U48-1)*exp(l4*tt)
tt <- 1; U48 <- 0; (U48-1)*exp(l4*tt)
tt <- 1; U48 <- 1; (U48-1)*exp(l4*tt)
tt <- 1; U48 <- 10; (U48-1)*exp(l4*tt)
tt <- 1; U48 <- 0.1; (U48-1)*exp(l4*tt)
tt <- 100; U48 <- 10; (U48-1)*exp(l4*tt)
Q
10/settings('lambda','U234')[1]*1000
10/(settings('lambda','U234')[1]*1000)
ttt
tt
tt>(fact/l6) & d$Ra6U8!=0
Q
tt>(fact/l6) & d$Ra6U8!=1
tt>(fact/l6) & d$Ra6U8!=1
tt>(fact/l0) & d$Th0U8!=1
tt>(fact/l4) & d$U48!=1
tt
tt
tt>(fact/l6) & d$Ra6U8!=1
tt>(fact/l1) & d$Pa1U8!=1
d
Q
traceback()
Pb207Pb206.misfit(search.range[1],x=x,d=d)
Pb207Pb206.misfit(search.range[2],x=x,d=d)
search.range
tt
D
tt
Q
tt
tt
tt
tt
ttt
dd
tt>(fact/l6) & d$Ra6U8!=1
d
max(0, 1 + (d$Ra6U8-1)*exp(l6*tt))
 exp(l6*tt)
 exp(l6*ttt)
ttt
l6
Q
(l8/l0)*(dd$fThU-1)
(l8/l6)*(dd$fRaU-1)
Q
wendt(0,d)
traceback()
tb
ta
intersection.misfit.york(ta,a=a,b=b,d=d)
intersection.misfit.york(tb,a=a,b=b,d=d)
intersection.misfit.york(midpoint,a=a,b=b,d=d)
midpoint
tb
intersection.misfit.york(1,a=a,b=b,d=d)
intersection.misfit.york(2,a=a,b=b,d=d)
intersection.misfit.york(0.1,a=a,b=b,d=d)
intersection.misfit.york(10,a=a,b=b,d=d)
intersection.misfit.york(100,a=a,b=b,d=d)
intersection.misfit.york(1000,a=a,b=b,d=d)
intersection.misfit.york(ta,a=a,b=b,d=d)
intersection.misfit.york(3000,a=a,b=b,d=d)
intersection.misfit.york(5000,a=a,b=b,d=d)
intersection.misfit.york(6000,a=a,b=b,d=d)
intersection.misfit.york(0,a=a,b=b,d=d)
b
intersection.misfit.york(ta,a=a,b=b,d=d)
ta
            search.range <- c(midpoint,ta)
            out['t[u]'] <- stats::uniroot(intersection.misfit.york,
                                          interval=search.range,a=a,b=b,d=d)$root

out
Q
traceback()
?stop
q()
n
?colorRamps:::matlab.like
?colorRamps::matlab.like
?colorRamps::ygobb
colorRamps:::matlab.like
colorRamps:::rgb.tables
?colorspace::diverge_hsl
q()
n
q()
n
q()
n
q()
n
q()
n
