# convert isotope dilution derived concentrations to ratios
# x = matrix with columns 'Sm[ppm]','errSm[ppm]', 'Nd[ppm]','errNd[ppm]' 
# and 'Nd143Nd144','errNd143Nd144'
ID.Sm <- function(x,exterr=FALSE,isochron=TRUE){
    R4452Sm <- iratio('Sm144Sm152')[1]
    R4752Sm <- iratio('Sm147Sm152')[1]
    R4852Sm <- iratio('Sm148Sm152')[1]
    R4952Sm <- iratio('Sm149Sm152')[1]
    R5052Sm <- iratio('Sm150Sm152')[1]
    R5452Sm <- iratio('Sm154Sm152')[1]
    R24Nd <- iratio('Nd142Nd144')[1]
    R34Nd0 <- iratio('Nd143Nd144')[1]
    R54Nd <- iratio('Nd145Nd144')[1]
    R64Nd <- iratio('Nd146Nd144')[1]
    R84Nd <- iratio('Nd148Nd144')[1]
    R04Nd <- iratio('Nd150Nd144')[1]
    if (isochron){
        R34Nd <- x$x[,'Nd143Nd144']
        dR34Nd.dR34Nd0 <- 0
    } else { # make common Nd correction
        R34Nd <-  x$x[,'Nd143Nd144'] - R34Nd0
        dR34Nd.dR34Nd0 <- -1
    }
    Sm <- x$x[,'Smppm']
    Nd <- x$x[,'Ndppm']
    MMSm <- imass('Sm')[1]
    MMNd <- imass('Nd')[1]
    invf147Sm <- R4452Sm/R4752Sm + 1 + R4852Sm/R4752Sm +
        R4952Sm/R4752Sm + R5052Sm/R4752Sm +
        1/R4752Sm + R5452Sm/R4752Sm
    invf144Nd <- R24Nd + R34Nd + 1 + R64Nd + R84Nd + R04Nd
    Sm147Nd143 <- (invf144Nd/invf147Sm)*(Sm/Nd)*(MMNd/MMSm)
    dinvf147Sm.dR4452Sm <- 1/R4752Sm
    dinvf147Sm.dR4752Sm <- -(R4452Sm + R4852Sm + R4952Sm + R5052Sm +
                             1 + R5452Sm)/R4752Sm^2
    dinvf147Sm.dR4852Sm <- 1/R4752Sm
    dinvf147Sm.dR4952Sm <- 1/R4752Sm
    dinvf147Sm.dR5052Sm <- 1/R4752Sm
    dinvf147Sm.dR5452Sm <- 1/R4752Sm
    dinvf144Nd.dR24Nd <- 1
    dinvf144Nd.dR34Nd <- 1
    dinvf144Nd.dR34Nd0 <- dinvf144Nd.dR34Nd*dR34Nd.dR34Nd0
    dinvf144Nd.dR64Nd <- 1
    dinvf144Nd.dR84Nd <- 1
    dinvf144Nd.dR04Nd <- 1
    E <- matrix(0,13,13)
    J <- matrix(0,2,13)
    if (exterr){
        E[1,1] <- iratio('Sm144Sm152')[2]^2 # var(R4452Sm)
        E[2,2] <- iratio('Sm147Sm152')[2]^2 # var(R4752Sm)
        E[3,3] <- iratio('Sm148Sm152')[2]^2 # var(R4852Sm)
        E[4,4] <- iratio('Sm149Sm152')[2]^2 # var(R4952Sm)
        E[5,5] <- iratio('Sm150Sm152')[2]^2 # var(R5052Sm)
        E[6,6] <- iratio('Sm154Sm152')[2]^2 # var(R5452Sm)
        E[7,7] <- iratio('Nd142Nd144')[2]^2 # var(R24Nd)
        E[8,8] <- iratio('Nd143Nd144')[2]^2 # var(R34Nd0)
        E[9,9] <- iratio('Nd146Nd144')[2]^2 # var(R64Nd)
        E[10,10] <- iratio('Nd148Nd144')[2]^2 # var(R84Nd)
        E[11,11] <- iratio('Nd150Nd144')[2]^2 # var(R04Nd)
        E[12,12] <- imass('Sm')[2]^2
        E[13,13] <- imass('Nd')[2]^2
    }
    nn <- dim(x$x)[1]
    out <- matrix(NA,nn,5) # X=Sm147/Nd144 and Y=Nd143/Nd144
    colnames(out) <- c('X','sX','Y','sY','rXY')
    out[,1] <- Sm147Nd144
    out[,3] <- R34Nd
    for (i in 1:nn){
        E[14,14] <- x$x[i,'errNd143Nd144']^2 # var(R34Nd)
        E[15,15] <- x$x[i,'errSmppm']^2
        E[16,16] <- x$x[i,'errNdppm']^2
        J[1,1] <- -Sm147Nd143[i]*dinvf147Sm.dR4452Sm/invf147Sm
        J[1,2] <- -Sm147Nd143[i]*dinvf147Sm.dR4752Sm/invf147Sm
        J[1,3] <- -Sm147Nd143[i]*dinvf147Sm.dR4852Sm/invf147Sm
        J[1,4] <- -Sm147Nd143[i]*dinvf147Sm.dR4952Sm/invf147Sm
        J[1,5] <- -Sm147Nd143[i]*dinvf147Sm.dR5052Sm/invf147Sm
        J[1,6] <- -Sm147Nd143[i]*dinvf147Sm.dR5452Sm/invf147Sm
        J[1,7] <- (dinvf144Nd.dR24Nd/invf147Sm)*(Sm/Nd)*(MMNd/MMSm)
        J[1,8] <- (dinvf144Nd.dR34Nd0/invf147Sm)*(Sm/Nd)*(MMNd/MMSm)
        J[1,10] <- (dinvf144Nd.dR64Nd/invf147Sm)*(Sm/Nd)*(MMNd/MMSm)
        J[1,11] <- (dinvf144Nd.dR84Nd/invf147Sm)*(Sm/Nd)*(MMNd/MMSm)
        J[1,12] <- (dinvf144Nd.dR04Nd/invf147Sm)*(Sm/Nd)*(MMNd/MMSm)
        J[2,4] <- dR78Os.dR72Os
        J[2,5] <- dR78Os.dR82Os
        J[2,10] <- dR78Os.dR78Os
        E2 <- J %*% E %*% t(J)
        if (all(is.finite(E2))){
            out[i,2] <- sqrt(E2[1,1])
            out[i,4] <- sqrt(E2[2,2])
            out[i,5] <- stats::cov2cor(E2)[1,2]
        }
    }
    out
}

get.ReOs.ratio <- function(tt,st,exterr=TRUE){
    L <- lambda("Re187")[1]
    sL <- lambda("Re187")[2]
    R <- exp(L*tt)-1
    Jac <- matrix(0,1,2)
    E <- matrix(0,2,2)
    Jac[1,1] <- tt*exp(L*tt)
    Jac[1,2] <- L*exp(L*tt)
    E[1,1] <- sL^2
    E[2,2] <- st^2
    sR <- sqrt(Jac %*% E %*% t(Jac))
    out <- c(R,sR)
}

get.ReOs.age <- function(Os187Re187,sOs187Re187,exterr=TRUE){
    l187 <- lambda('Re187')
    tt <- log(1 + Os187Re187)/l187[1]
    E <- matrix(0,2,2)
    J <- matrix(0,1,2)
    E[1,1] <- sOs187Re187^2
    if (exterr) E[2,2] <- l187[2]^2
    J[1,1] <- 1/(l187[1]*(1 + Os187Re187))
    J[1,2] <- -tt/l187[1]
    st <- sqrt(J %*% E %*% t(J))
    c(tt,st)
}

# i2i = isochron to intercept
ReOs.age <- function(x,exterr=TRUE,i=NA,sigdig=NA,i2i=TRUE){
    ns <- nrow(x$x)
    if (i2i){
        fit <- isochron.ReOs(x,plot=FALSE,exterr=exterr)
        dat <- ID.Re(x,exterr=exterr,isochron=TRUE)
        dat[,'Y'] <- dat[,'Y'] - fit$a[1]
        if (exterr) dat[,'sY'] <- sqrt(dat[,'sY']^2 + fit$a[2]^2)
    } else {
        dat <- ID.Re(x,exterr=exterr,isochron=FALSE)
    }
    out <- matrix(0,ns,2)
    E <- matrix(0,2,2)
    J <- matrix(0,1,2)
    for (j in 1:ns) {
        E[1,1] <- dat[j,'sX']^2
        E[2,2] <- dat[j,'sY']^2
        E[1,2] <- dat[j,'rXY']*dat[j,'sX']*dat[j,'sY']
        E[2,1] <- E[1,2]
        J[1,1] <- -dat[j,'Y']/dat[j,'X']^2
        J[1,2] <- 1/dat[j,'X']        
        Os187Re187 <- dat[j,'Y']/dat[j,'X']
        sOs187Re187 <- sqrt(J%*%E%*%t(J))
        tt <- get.ReOs.age(Os187Re187,sOs187Re187,exterr=TRUE)
        t.out <- roundit(tt[1],tt[2],sigdig=sigdig)
        out[j,] <- c(t.out$x,t.out$err)
    }
    if (!is.na(i)) out <- out[i,]
    out
}
